{"paragraphs":[{"text":"%pyspark\nimport pyspark\nimport pandas as pd\nprint(\"%html <H1>Aggregation & Cleaning of Dataset</H1>\")","user":"anonymous","dateUpdated":"2018-05-10T06:40:28-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<H1>Aggregation & Cleaning of Dataset</H1>\n"}]},"apps":[],"jobName":"paragraph_1525024448656_-286393302","id":"20180429-135408_91519226","dateCreated":"2018-04-29T13:54:08-0400","dateStarted":"2018-05-10T05:26:07-0400","dateFinished":"2018-05-10T05:26:07-0400","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3221"},{"text":"%pyspark\nprint(\"%html <H4>Function to remove nulls and empty string</H1>\")","user":"anonymous","dateUpdated":"2018-05-10T05:29:12-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<H4>Function to remove nulls and empty string</H1>\n"}]},"apps":[],"jobName":"paragraph_1525944503789_-1347753625","id":"20180510-052823_2070759117","dateCreated":"2018-05-10T05:28:23-0400","dateStarted":"2018-05-10T05:29:06-0400","dateFinished":"2018-05-10T05:29:06-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3222"},{"text":"%pyspark\nfrom functools import reduce\nfrom pyspark.sql import DataFrame\n\ndef unionAll(*dfs):\n    return reduce(DataFrame.unionAll, dfs)\n\ndef dropNulls(df):\n    count= df.where(df['DRG Definition'].isNull() | df['Provider City'].isNull() | df['Provider State'].isNull()\\\n| df['Total Discharges'].isNull() | df['Average Total Payments'].isNull() ).count()\n    print('Count of rows containing null values = ',count)\n    countna = df.where((df['DRG Definition'] == '') | (df['Provider City'] == '') | (df['Provider State'] == '')\\\n| (df['Total Discharges'] == '') | (df['Average Total Payments'] == '') ).count()\n    print('Count of rows containing empty strings = ',countna)\n    df = df.filter(df['DRG Definition'].isNotNull() | df['Provider City'].isNotNull() | df['Provider State'].isNotNull()\\\n| df['Total Discharges'].isNotNull() | df['Average Total Payments'].isNotNull())\n    df = df.filter((df['DRG Definition'] != '') | (df['Provider City'] != '') | (df['Provider State'] != '')\\\n| (df['Total Discharges'] != '') | (df['Average Total Payments'] != ''))\n    return df","user":"anonymous","dateUpdated":"2018-05-10T05:27:50-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1525944373505_215141856","id":"20180510-052613_218733339","dateCreated":"2018-05-10T05:26:13-0400","dateStarted":"2018-05-10T05:27:50-0400","dateFinished":"2018-05-10T05:27:50-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3223"},{"text":"%pyspark\nprint(\"%html <H3>Inpatients Data</H3>\")","user":"anonymous","dateUpdated":"2018-05-10T05:30:53-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<H3>Inpatients Data</H3>\n"}]},"apps":[],"jobName":"paragraph_1525944566254_1999485185","id":"20180510-052926_2061996427","dateCreated":"2018-05-10T05:29:26-0400","dateStarted":"2018-05-10T05:30:04-0400","dateFinished":"2018-05-10T05:30:04-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3224"},{"text":"%pyspark\ninPatient_2011 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Provider_Charge_Inpatient_DRG100_FY2011.csv\",header=True)\ninPatient_2012 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Provider_Charge_Inpatient_DRG100_FY2012.csv\",header=True)\ninPatient_2013 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Provider_Charge_Inpatient_DRG100_FY2013.csv\",header=True)\ninPatient_2014 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Provider_Charge_Inpatient_DRGALL_FY2014.csv\",header=True)\ninPatient_2015 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Provider_Charge_Inpatient_DRGALL_FY2015.csv\",header=True)","user":"anonymous","dateUpdated":"2018-05-06T21:59:04-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1525024510677_-632005083","id":"20180429-135510_1325889839","dateCreated":"2018-04-29T13:55:10-0400","dateStarted":"2018-05-06T21:59:04-0400","dateFinished":"2018-05-06T21:59:09-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3225"},{"text":"%pyspark\ninPatient_2011.printSchema()\ninPatient_2012.printSchema()\ninPatient_2013.printSchema()\ninPatient_2014.printSchema()\ninPatient_2015.printSchema()","user":"anonymous","dateUpdated":"2018-05-06T21:59:13-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- DRG Definition: string (nullable = true)\n |-- Provider Id: string (nullable = true)\n |-- Provider Name: string (nullable = true)\n |-- Provider Street Address: string (nullable = true)\n |-- Provider City: string (nullable = true)\n |-- Provider State: string (nullable = true)\n |-- Provider Zip Code: string (nullable = true)\n |-- Hospital Referral Region (HRR) Description: string (nullable = true)\n |-- Total Discharges: string (nullable = true)\n |-- Average Covered Charges: string (nullable = true)\n |-- Average Total Payments: string (nullable = true)\n |-- Average Medicare Payments: string (nullable = true)\n\nroot\n |-- DRG Definition: string (nullable = true)\n |-- Provider Id: string (nullable = true)\n |-- Provider Name: string (nullable = true)\n |-- Provider Street Address: string (nullable = true)\n |-- Provider City: string (nullable = true)\n |-- Provider State: string (nullable = true)\n |-- Provider Zip Code: string (nullable = true)\n |-- Hospital Referral Region (HRR) Description: string (nullable = true)\n |-- Total Discharges: string (nullable = true)\n |-- Average Covered Charges: string (nullable = true)\n |-- Average Total Payments: string (nullable = true)\n |-- Average Medicare Payments: string (nullable = true)\n\nroot\n |-- DRG Definition: string (nullable = true)\n |-- Provider Id: string (nullable = true)\n |-- Provider Name: string (nullable = true)\n |-- Provider Street Address: string (nullable = true)\n |-- Provider City: string (nullable = true)\n |-- Provider State: string (nullable = true)\n |-- Provider Zip Code: string (nullable = true)\n |-- Hospital Referral Region (HRR) Description: string (nullable = true)\n |-- Total Discharges: string (nullable = true)\n |-- Average Covered Charges: string (nullable = true)\n |-- Average Total Payments: string (nullable = true)\n |-- Average Medicare Payments: string (nullable = true)\n\nroot\n |-- DRG Definition: string (nullable = true)\n |-- Provider Id: string (nullable = true)\n |-- Provider Name: string (nullable = true)\n |-- Provider Street Address: string (nullable = true)\n |-- Provider City: string (nullable = true)\n |-- Provider State: string (nullable = true)\n |-- Provider Zip Code: string (nullable = true)\n |-- Hospital Referral Region (HRR) Description: string (nullable = true)\n |-- Total Discharges: string (nullable = true)\n |-- Average Covered Charges: string (nullable = true)\n |-- Average Total Payments: string (nullable = true)\n |-- Average Medicare Payments: string (nullable = true)\n\nroot\n |-- DRG Definition: string (nullable = true)\n |-- Provider Id: string (nullable = true)\n |-- Provider Name: string (nullable = true)\n |-- Provider Street Address: string (nullable = true)\n |-- Provider City: string (nullable = true)\n |-- Provider State: string (nullable = true)\n |-- Provider Zip Code: string (nullable = true)\n |-- Hospital Referral Region (HRR) Description: string (nullable = true)\n |-- Total Discharges: string (nullable = true)\n |-- Average Covered Charges: string (nullable = true)\n |-- Average Total Payments: string (nullable = true)\n |-- Average Medicare Payments: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1525024811625_-2144039257","id":"20180429-140011_1623744137","dateCreated":"2018-04-29T14:00:11-0400","dateStarted":"2018-05-06T21:59:13-0400","dateFinished":"2018-05-06T21:59:13-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3226"},{"text":"%pyspark\nfrom pyspark.sql.functions import lit\ninPatient_2011 = inPatient_2011.withColumn(\"Year\", lit('2011'))\ninPatient_2012 = inPatient_2012.withColumn(\"Year\", lit('2012'))\ninPatient_2013 = inPatient_2013.withColumn(\"Year\", lit('2013'))\ninPatient_2014 = inPatient_2014.withColumn(\"Year\", lit('2014'))\ninPatient_2015 = inPatient_2015.withColumn(\"Year\", lit('2015'))","user":"anonymous","dateUpdated":"2018-05-06T21:59:18-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1525026214147_-897862761","id":"20180429-142334_2054029020","dateCreated":"2018-04-29T14:23:34-0400","dateStarted":"2018-05-06T21:59:18-0400","dateFinished":"2018-05-06T21:59:18-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3227"},{"text":"%pyspark\ninPatient_2011 = dropNulls(inPatient_2011)\ninPatient_2012 = dropNulls(inPatient_2012)\ninPatient_2013 = dropNulls(inPatient_2013)\ninPatient_2014 = dropNulls(inPatient_2014)\ninPatient_2015 = dropNulls(inPatient_2015)","user":"anonymous","dateUpdated":"2018-05-06T22:14:19-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Count of rows containing null values =  0\nCount of rows containing empty strings =  0\nCount of rows containing null values =  0\nCount of rows containing empty strings =  0\nCount of rows containing null values =  4147\nCount of rows containing empty strings =  0\nCount of rows containing null values =  0\nCount of rows containing empty strings =  0\nCount of rows containing null values =  0\nCount of rows containing empty strings =  0\n"}]},"apps":[],"jobName":"paragraph_1525658363706_-717015667","id":"20180506-215923_1720086297","dateCreated":"2018-05-06T21:59:23-0400","dateStarted":"2018-05-06T22:14:19-0400","dateFinished":"2018-05-06T22:14:31-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3228"},{"text":"%pyspark\ninPatient_All = unionAll(inPatient_2011, inPatient_2012, inPatient_2013, inPatient_2014, inPatient_2015)","user":"anonymous","dateUpdated":"2018-05-10T05:30:42-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1525027597251_661144716","id":"20180429-144637_614100674","dateCreated":"2018-04-29T14:46:37-0400","dateStarted":"2018-05-06T22:14:53-0400","dateFinished":"2018-05-06T22:14:53-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3229"},{"text":"%pyspark\ninPatient_All.repartition(1).write.csv(\"hdfs://dumbo/user/as11500/Medicare/Inpatient_combined/inPatientAll.csv\", sep=',', header=\"True\")","user":"anonymous","dateUpdated":"2018-05-06T22:15:54-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1525027654508_-1103421009","id":"20180429-144734_1778134715","dateCreated":"2018-04-29T14:47:34-0400","dateStarted":"2018-05-06T22:15:54-0400","dateFinished":"2018-05-06T22:16:08-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3230"},{"text":"%pyspark\nprint(\"%html <H3>OutPatients Data</H3>\")","user":"anonymous","dateUpdated":"2018-05-10T06:54:42-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<H3>OutPatients Data</H3>\n"}]},"apps":[],"jobName":"paragraph_1525944642244_-1200178614","id":"20180510-053042_1393851037","dateCreated":"2018-05-10T05:30:42-0400","dateStarted":"2018-05-10T05:31:47-0400","dateFinished":"2018-05-10T05:31:47-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3231"},{"text":"%pyspark\noutPatient_2011 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Provider_Charge_Outpatient_APC30_CY2011_v2.csv\",header=True)\noutPatient_2012 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Provider_Charge_Outpatient_APC30_CY2012.csv\",header=True)\noutPatient_2013 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Provider_Charge_Outpatient_APC30_CY2013_v2.csv\",header=True)\noutPatient_2014 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Provider_Charge_Outpatient_APC32_CY2014.csv\",header=True)\noutPatient_2015 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Charge_Outpatient_APC28_CY2015_Provider.csv\",header=True)","user":"anonymous","dateUpdated":"2018-05-10T05:32:08-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525944721070_724209502","id":"20180510-053201_854165501","dateCreated":"2018-05-10T05:32:01-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:3232"},{"text":"%pyspark\nfrom pyspark.sql.functions import lit\noutPatient_2011 = outPatient_2011.withColumn(\"Year\", lit('2011'))\noutPatient_2012 = outPatient_2012.withColumn(\"Year\", lit('2012'))\noutPatient_2013 = outPatient_2013.withColumn(\"Year\", lit('2013'))\noutPatient_2014 = outPatient_2014.withColumn(\"Year\", lit('2014'))\noutPatient_2015 = outPatient_2015.withColumn(\"Year\", lit('2015'))","user":"anonymous","dateUpdated":"2018-05-10T05:32:21-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525944728391_-1994041477","id":"20180510-053208_70364665","dateCreated":"2018-05-10T05:32:08-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:3233"},{"text":"%pyspark\noutPatient_2011 = dropNulls(outPatient_2011)\noutPatient_2012 = dropNulls(outPatient_2012)\noutPatient_2013 = dropNulls(outPatient_2013)\noutPatient_2014 = dropNulls(outPatient_2014)\noutPatient_2015 = dropNulls(outPatient_2015)","user":"anonymous","dateUpdated":"2018-05-10T05:33:16-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525944742001_-402689378","id":"20180510-053222_1498887755","dateCreated":"2018-05-10T05:32:22-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:3234"},{"text":"%pyspark\nOutPatient_All = unionAll(outPatient_2011, outPatient_2012, outPatient_2013, outPatient_2014, outPatient_2015)","user":"anonymous","dateUpdated":"2018-05-10T05:34:12-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525944844408_2069507840","id":"20180510-053404_1742683665","dateCreated":"2018-05-10T05:34:04-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:3235"},{"text":"%pyspark\nOutPatient_All.repartition(1).write.csv(\"hdfs://dumbo/user/as11500/Medicare/Outpatient_combined\", sep=',', header=\"True\")","user":"anonymous","dateUpdated":"2018-05-10T05:34:30-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525944852995_-1245103935","id":"20180510-053412_1295324019","dateCreated":"2018-05-10T05:34:12-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:3236"},{"text":"%pyspark\nprint(\"%html <H3>Part D Prescriber Data</H3>\")","user":"anonymous","dateUpdated":"2018-05-10T06:54:29-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<H3>Part D Prescriber Data</H3>\n"}]},"apps":[],"jobName":"paragraph_1525944870641_664820254","id":"20180510-053430_196579283","dateCreated":"2018-05-10T05:34:30-0400","dateStarted":"2018-05-10T05:35:31-0400","dateFinished":"2018-05-10T05:35:31-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3237"},{"text":"%pyspark\nfrom pyspark.sql.functions import lit\n\nPart_D_2013 = spark.read.csv(\"hdfs://dumbo/user/ddp337/Project/Data/Part D_Prescriber/PartD_Prescriber_PUF_NPI_Drug_13.txt\",sep = \"\\t\",header = \"True\")\nPart_D_2013 = Part_D_2013.withColumn(\"Year\", lit('2013'))\nPart_D_2014 = spark.read.csv(\"hdfs://dumbo/user/ddp337/Project/Data/Part D_Prescriber/PartD_Prescriber_PUF_NPI_Drug_14.txt\",sep = \"\\t\",header = \"True\")\nPart_D_2014 = Part_D_2014.withColumn(\"Year\", lit('2014'))\nPart_D_2015 = spark.read.csv(\"hdfs://dumbo/user/ddp337/Project/Data/Part D_Prescriber/PartD_Prescriber_PUF_NPI_Drug_15.txt\",sep = \"\\t\",header = \"True\")\nPart_D_2015 = Part_D_2015.withColumn(\"Year\", lit('2015'))\n\nPart_D_All = unionAll(Part_D_2013, Part_D_2014,Part_D_2015)\nPart_D_All.registerTempTable(\"Part_D_All\")","user":"anonymous","dateUpdated":"2018-05-10T06:54:11-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1525944902957_92560722","id":"20180510-053502_1714875853","dateCreated":"2018-05-10T05:35:02-0400","dateStarted":"2018-05-10T06:54:11-0400","dateFinished":"2018-05-10T06:54:12-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3238"},{"text":"%pyspark\nPart_D_All.repartition(1).write.csv(\"hdfs://dumbo/user/ddp337/Project/Data/Part D_Prescriber/Part_D_All\", sep=',', header=\"True\")","user":"anonymous","dateUpdated":"2018-05-10T06:52:47-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525949544850_-1804263988","id":"20180510-065224_1350652866","dateCreated":"2018-05-10T06:52:24-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:3239"},{"text":"%pyspark\nprint(\"%html <H3>Skilled Nursing facility</H3>\")","user":"anonymous","dateUpdated":"2018-05-10T06:54:31-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<H3>Skilled Nursing facility</H3>\n"}]},"apps":[],"jobName":"paragraph_1525944939412_-2080855166","id":"20180510-053539_621173584","dateCreated":"2018-05-10T05:35:39-0400","dateStarted":"2018-05-10T05:36:05-0400","dateFinished":"2018-05-10T05:36:05-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3240"},{"text":"%pyspark\nNursing_2014 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Skilled_Nursing_Facility__SNF__Provider_Aggregate_Report__CY_2014.csv\",header = \"True\")\nNursing_2015 = spark.read.csv(\"hdfs://dumbo/user/as11500/Medicare/Medicare_Skilled_Nursing_Facility__SNF__Provider_Aggregate_Report__CY_2015.csv\",header = \"True\")\nNursing_All = unionAll(Nursing_2014, Nursing_2015)\nNursing_All.registerTempTable(\"Nursing_All\")","user":"anonymous","dateUpdated":"2018-05-10T05:58:53-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1525945345417_-1431417636","id":"20180510-054225_113150226","dateCreated":"2018-05-10T05:42:25-0400","dateStarted":"2018-05-10T05:58:53-0400","dateFinished":"2018-05-10T05:59:00-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3241"},{"text":"%pyspark\nNursing_All = spark.sql(\"SELECT `Provider ID` as provider_id, `Facility Name` as facility_name, City, State, `Total Stays`, `Distinct Beneficiaries Per Provider`,`Average Length of Stay (Days)`, `Total SNF Charge Amount`,`Total SNF Medicare Allowed Amount`,`Total SNF Medicare Payment Amount`,`Total SNF Medicare Standard Payment Amount`,`Average Age`,`Male Beneficiaries`,`Female Beneficiaries`, `Nondual Beneficiaries`,`Dual Beneficiaries`,`White Beneficiaries`,`Black Beneficiaries`,`Average HCC Score`, `Percent of Beneficiaries with Atrial Fibrillation`, `Percent of Beneficiaries with Asthma`,`Percent of Beneficiaries with Cancer`,`Percent of Beneficiaries with CHF`,`Percent of Beneficiaries with Chronic Kidney Disease`,`Percent of Beneficiaries with COPD`,`Percent of Beneficiaries with Depression`,`Percent of Beneficiaries with Diabetes`,`Percent of Beneficiaries with Hyperlipidemia`,`Percent of Beneficiaries with IHD`,`Percent of Beneficiaries with Osteoporosis`,`Percent of Beneficiaries with RA/OA`,`Percent of Beneficiaries with Schizophrenia`,`Percent of Beneficiaries with Stroke` FROM `Nursing_All`\")\n","user":"anonymous","dateUpdated":"2018-05-10T05:59:06-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1525945391982_-1831510520","id":"20180510-054311_1910300788","dateCreated":"2018-05-10T05:43:11-0400","dateStarted":"2018-05-10T05:59:06-0400","dateFinished":"2018-05-10T05:59:06-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3242"},{"text":"%pyspark\nNursing = Nursing_All\nNursing = Nursing.withColumn('index',Nursing.provider_id)\nNursing = Nursing.drop('provider_id','facility_name', 'City', 'State')","user":"anonymous","dateUpdated":"2018-05-10T05:59:22-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1525945434366_1707317918","id":"20180510-054354_174332417","dateCreated":"2018-05-10T05:43:54-0400","dateStarted":"2018-05-10T05:59:22-0400","dateFinished":"2018-05-10T05:59:22-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3243"},{"text":"%pyspark\nfrom pyspark.sql.functions import regexp_replace, col\nfrom pyspark.sql.types import DoubleType\n\nfor B in ['Percent of Beneficiaries with Atrial Fibrillation', 'Percent of Beneficiaries with Asthma', 'Percent of Beneficiaries with Cancer', 'Percent of Beneficiaries with CHF', 'Percent of Beneficiaries with Chronic Kidney Disease', 'Percent of Beneficiaries with COPD', 'Percent of Beneficiaries with Depression', 'Percent of Beneficiaries with Diabetes', 'Percent of Beneficiaries with Hyperlipidemia', 'Percent of Beneficiaries with IHD', 'Percent of Beneficiaries with Osteoporosis', 'Percent of Beneficiaries with RA/OA', 'Percent of Beneficiaries with Schizophrenia', 'Percent of Beneficiaries with Stroke']:\n    Nursing = Nursing.withColumn(B,regexp_replace(col(B), \"%\", \"\").cast(DoubleType()))\nfor B in ['Total SNF Charge Amount', 'Total SNF Medicare Allowed Amount', 'Total SNF Medicare Payment Amount', 'Total SNF Medicare Standard Payment Amount']:    \n    Nursing = Nursing.withColumn(B,regexp_replace(col(B), \"\\\\$\", \"\").cast(DoubleType()))\n    \nfor B in Nursing.schema.names:  \n    Nursing = Nursing.withColumn(B,regexp_replace(col(B), \"\\\\*\", \"\").cast(DoubleType()))\n    \n    \nNursing = Nursing.fillna(0)","user":"anonymous","dateUpdated":"2018-05-10T06:11:14-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1525945446062_-1229085687","id":"20180510-054406_888502053","dateCreated":"2018-05-10T05:44:06-0400","dateStarted":"2018-05-10T06:11:14-0400","dateFinished":"2018-05-10T06:11:15-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3244"},{"text":"%pyspark\nNursing.repartition(1).write.csv(\"hdfs://dumbo/user/as11500/Medicare/Skilled_Nursing_facility\", sep=',', header=\"True\")","user":"anonymous","dateUpdated":"2018-05-10T06:12:38-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1525945754785_1424166274","id":"20180510-054914_709346090","dateCreated":"2018-05-10T05:49:14-0400","dateStarted":"2018-05-10T06:12:38-0400","dateFinished":"2018-05-10T06:12:50-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3245"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-04-29T20:03:26-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525046606088_1696896004","id":"20180429-200326_573609463","dateCreated":"2018-04-29T20:03:26-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:3246"}],"name":"Cleaning_Script","id":"2DD4U94YM","angularObjects":{"2DF28HTQJ:shared_process":[],"2DCJYGBVN:shared_process":[],"2DD5GZ2XY:shared_process":[],"2DCUYB3NF:shared_process":[],"2DCVFPKW7:shared_process":[],"2DDRMB99J:shared_process":[],"2DEC6FR24:shared_process":[],"2DC7WQRHQ:shared_process":[],"2DFA63CF2:shared_process":[],"2DECE7GRY:shared_process":[],"2DE4S984C:shared_process":[],"2DBR3T6SP:shared_process":[],"2DDBEJ6Z6:shared_process":[],"2DCFA59K6:shared_process":[],"2DE4NG36V:shared_process":[],"2DDG5PHMG:shared_process":[],"2DE6J6E7G:shared_process":[],"2DDFDXEHN:shared_process":[],"2DE1MN1V9:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}